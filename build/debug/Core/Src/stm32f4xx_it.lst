ARM GAS  /tmp/ccyOT5GX.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB134:
  28              		.file 1 "Core/Src/stm32f4xx_it.c"
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f4xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f4xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f4xx_it.c ****   *
  16:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f4xx_it.c ****   */
  18:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f4xx_it.c **** 
  20:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f4xx_it.c **** #include "main.h"
  22:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  23:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32f4xx_it.c **** 
  27:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32f4xx_it.c **** 
  30:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
ARM GAS  /tmp/ccyOT5GX.s 			page 2


  31:Core/Src/stm32f4xx_it.c **** 
  32:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32f4xx_it.c **** 
  35:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32f4xx_it.c **** 
  37:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32f4xx_it.c **** 
  40:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32f4xx_it.c **** 
  42:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32f4xx_it.c **** 
  45:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32f4xx_it.c **** 
  47:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32f4xx_it.c **** 
  50:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32f4xx_it.c **** 
  52:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32f4xx_it.c **** 
  55:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32f4xx_it.c **** 
  57:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32f4xx_it.c **** extern CAN_HandleTypeDef hcan1;
  59:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim2;
  60:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  61:Core/Src/stm32f4xx_it.c **** 
  62:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  63:Core/Src/stm32f4xx_it.c **** 
  64:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  65:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  66:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  67:Core/Src/stm32f4xx_it.c **** /**
  68:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  69:Core/Src/stm32f4xx_it.c ****   */
  70:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  71:Core/Src/stm32f4xx_it.c **** {
  29              		.loc 1 71 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.L2:
  72:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  73:Core/Src/stm32f4xx_it.c **** 
  74:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  75:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  76:Core/Src/stm32f4xx_it.c ****    while (1)
  36              		.loc 1 76 4 discriminator 1 view .LVU1
  77:Core/Src/stm32f4xx_it.c ****   {
  78:Core/Src/stm32f4xx_it.c ****   }
  37              		.loc 1 78 3 discriminator 1 view .LVU2
ARM GAS  /tmp/ccyOT5GX.s 			page 3


  76:Core/Src/stm32f4xx_it.c ****   {
  38              		.loc 1 76 10 discriminator 1 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE134:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv4-sp-d16
  51              	HardFault_Handler:
  52              	.LFB135:
  79:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  80:Core/Src/stm32f4xx_it.c **** }
  81:Core/Src/stm32f4xx_it.c **** 
  82:Core/Src/stm32f4xx_it.c **** /**
  83:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  84:Core/Src/stm32f4xx_it.c ****   */
  85:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  86:Core/Src/stm32f4xx_it.c **** {
  53              		.loc 1 86 1 view -0
  54              		.cfi_startproc
  55              		@ Volatile: function does not return.
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59              	.L4:
  87:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  88:Core/Src/stm32f4xx_it.c **** 
  89:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  90:Core/Src/stm32f4xx_it.c ****   while (1)
  60              		.loc 1 90 3 discriminator 1 view .LVU5
  91:Core/Src/stm32f4xx_it.c ****   {
  92:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  93:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  94:Core/Src/stm32f4xx_it.c ****   }
  61              		.loc 1 94 3 discriminator 1 view .LVU6
  90:Core/Src/stm32f4xx_it.c ****   {
  62              		.loc 1 90 9 discriminator 1 view .LVU7
  63 0000 FEE7     		b	.L4
  64              		.cfi_endproc
  65              	.LFE135:
  67              		.section	.text.MemManage_Handler,"ax",%progbits
  68              		.align	1
  69              		.global	MemManage_Handler
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv4-sp-d16
  75              	MemManage_Handler:
  76              	.LFB136:
  95:Core/Src/stm32f4xx_it.c **** }
  96:Core/Src/stm32f4xx_it.c **** 
  97:Core/Src/stm32f4xx_it.c **** /**
  98:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
ARM GAS  /tmp/ccyOT5GX.s 			page 4


  99:Core/Src/stm32f4xx_it.c ****   */
 100:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 101:Core/Src/stm32f4xx_it.c **** {
  77              		.loc 1 101 1 view -0
  78              		.cfi_startproc
  79              		@ Volatile: function does not return.
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83              	.L6:
 102:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 103:Core/Src/stm32f4xx_it.c **** 
 104:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 105:Core/Src/stm32f4xx_it.c ****   while (1)
  84              		.loc 1 105 3 discriminator 1 view .LVU9
 106:Core/Src/stm32f4xx_it.c ****   {
 107:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 108:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 109:Core/Src/stm32f4xx_it.c ****   }
  85              		.loc 1 109 3 discriminator 1 view .LVU10
 105:Core/Src/stm32f4xx_it.c ****   {
  86              		.loc 1 105 9 discriminator 1 view .LVU11
  87 0000 FEE7     		b	.L6
  88              		.cfi_endproc
  89              	.LFE136:
  91              		.section	.text.BusFault_Handler,"ax",%progbits
  92              		.align	1
  93              		.global	BusFault_Handler
  94              		.syntax unified
  95              		.thumb
  96              		.thumb_func
  97              		.fpu fpv4-sp-d16
  99              	BusFault_Handler:
 100              	.LFB137:
 110:Core/Src/stm32f4xx_it.c **** }
 111:Core/Src/stm32f4xx_it.c **** 
 112:Core/Src/stm32f4xx_it.c **** /**
 113:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 114:Core/Src/stm32f4xx_it.c ****   */
 115:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 116:Core/Src/stm32f4xx_it.c **** {
 101              		.loc 1 116 1 view -0
 102              		.cfi_startproc
 103              		@ Volatile: function does not return.
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		@ link register save eliminated.
 107              	.L8:
 117:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 118:Core/Src/stm32f4xx_it.c **** 
 119:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 120:Core/Src/stm32f4xx_it.c ****   while (1)
 108              		.loc 1 120 3 discriminator 1 view .LVU13
 121:Core/Src/stm32f4xx_it.c ****   {
 122:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 123:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 124:Core/Src/stm32f4xx_it.c ****   }
ARM GAS  /tmp/ccyOT5GX.s 			page 5


 109              		.loc 1 124 3 discriminator 1 view .LVU14
 120:Core/Src/stm32f4xx_it.c ****   {
 110              		.loc 1 120 9 discriminator 1 view .LVU15
 111 0000 FEE7     		b	.L8
 112              		.cfi_endproc
 113              	.LFE137:
 115              		.section	.text.UsageFault_Handler,"ax",%progbits
 116              		.align	1
 117              		.global	UsageFault_Handler
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 121              		.fpu fpv4-sp-d16
 123              	UsageFault_Handler:
 124              	.LFB138:
 125:Core/Src/stm32f4xx_it.c **** }
 126:Core/Src/stm32f4xx_it.c **** 
 127:Core/Src/stm32f4xx_it.c **** /**
 128:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 129:Core/Src/stm32f4xx_it.c ****   */
 130:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 131:Core/Src/stm32f4xx_it.c **** {
 125              		.loc 1 131 1 view -0
 126              		.cfi_startproc
 127              		@ Volatile: function does not return.
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 131              	.L10:
 132:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 133:Core/Src/stm32f4xx_it.c **** 
 134:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 135:Core/Src/stm32f4xx_it.c ****   while (1)
 132              		.loc 1 135 3 discriminator 1 view .LVU17
 136:Core/Src/stm32f4xx_it.c ****   {
 137:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 138:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 139:Core/Src/stm32f4xx_it.c ****   }
 133              		.loc 1 139 3 discriminator 1 view .LVU18
 135:Core/Src/stm32f4xx_it.c ****   {
 134              		.loc 1 135 9 discriminator 1 view .LVU19
 135 0000 FEE7     		b	.L10
 136              		.cfi_endproc
 137              	.LFE138:
 139              		.section	.text.SVC_Handler,"ax",%progbits
 140              		.align	1
 141              		.global	SVC_Handler
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv4-sp-d16
 147              	SVC_Handler:
 148              	.LFB139:
 140:Core/Src/stm32f4xx_it.c **** }
 141:Core/Src/stm32f4xx_it.c **** 
 142:Core/Src/stm32f4xx_it.c **** /**
 143:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
ARM GAS  /tmp/ccyOT5GX.s 			page 6


 144:Core/Src/stm32f4xx_it.c ****   */
 145:Core/Src/stm32f4xx_it.c **** void SVC_Handler(void)
 146:Core/Src/stm32f4xx_it.c **** {
 149              		.loc 1 146 1 view -0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 147:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 148:Core/Src/stm32f4xx_it.c **** 
 149:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 150:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 151:Core/Src/stm32f4xx_it.c **** 
 152:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 153:Core/Src/stm32f4xx_it.c **** }
 154              		.loc 1 153 1 view .LVU21
 155 0000 7047     		bx	lr
 156              		.cfi_endproc
 157              	.LFE139:
 159              		.section	.text.DebugMon_Handler,"ax",%progbits
 160              		.align	1
 161              		.global	DebugMon_Handler
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv4-sp-d16
 167              	DebugMon_Handler:
 168              	.LFB140:
 154:Core/Src/stm32f4xx_it.c **** 
 155:Core/Src/stm32f4xx_it.c **** /**
 156:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 157:Core/Src/stm32f4xx_it.c ****   */
 158:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 159:Core/Src/stm32f4xx_it.c **** {
 169              		.loc 1 159 1 view -0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 160:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 161:Core/Src/stm32f4xx_it.c **** 
 162:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 163:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 164:Core/Src/stm32f4xx_it.c **** 
 165:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 166:Core/Src/stm32f4xx_it.c **** }
 174              		.loc 1 166 1 view .LVU23
 175 0000 7047     		bx	lr
 176              		.cfi_endproc
 177              	.LFE140:
 179              		.section	.text.PendSV_Handler,"ax",%progbits
 180              		.align	1
 181              		.global	PendSV_Handler
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 185              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccyOT5GX.s 			page 7


 187              	PendSV_Handler:
 188              	.LFB141:
 167:Core/Src/stm32f4xx_it.c **** 
 168:Core/Src/stm32f4xx_it.c **** /**
 169:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
 170:Core/Src/stm32f4xx_it.c ****   */
 171:Core/Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 172:Core/Src/stm32f4xx_it.c **** {
 189              		.loc 1 172 1 view -0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 173:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 174:Core/Src/stm32f4xx_it.c **** 
 175:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 176:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 177:Core/Src/stm32f4xx_it.c **** 
 178:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 179:Core/Src/stm32f4xx_it.c **** }
 194              		.loc 1 179 1 view .LVU25
 195 0000 7047     		bx	lr
 196              		.cfi_endproc
 197              	.LFE141:
 199              		.section	.text.SysTick_Handler,"ax",%progbits
 200              		.align	1
 201              		.global	SysTick_Handler
 202              		.syntax unified
 203              		.thumb
 204              		.thumb_func
 205              		.fpu fpv4-sp-d16
 207              	SysTick_Handler:
 208              	.LFB142:
 180:Core/Src/stm32f4xx_it.c **** 
 181:Core/Src/stm32f4xx_it.c **** /**
 182:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 183:Core/Src/stm32f4xx_it.c ****   */
 184:Core/Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 185:Core/Src/stm32f4xx_it.c **** {
 209              		.loc 1 185 1 view -0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213 0000 08B5     		push	{r3, lr}
 214              		.cfi_def_cfa_offset 8
 215              		.cfi_offset 3, -8
 216              		.cfi_offset 14, -4
 186:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 187:Core/Src/stm32f4xx_it.c **** 
 188:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 189:Core/Src/stm32f4xx_it.c ****   HAL_IncTick();
 217              		.loc 1 189 3 view .LVU27
 218 0002 FFF7FEFF 		bl	HAL_IncTick
 219              	.LVL0:
 190:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 191:Core/Src/stm32f4xx_it.c **** 
 192:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
ARM GAS  /tmp/ccyOT5GX.s 			page 8


 193:Core/Src/stm32f4xx_it.c **** }
 220              		.loc 1 193 1 is_stmt 0 view .LVU28
 221 0006 08BD     		pop	{r3, pc}
 222              		.cfi_endproc
 223              	.LFE142:
 225              		.section	.text.CAN1_TX_IRQHandler,"ax",%progbits
 226              		.align	1
 227              		.global	CAN1_TX_IRQHandler
 228              		.syntax unified
 229              		.thumb
 230              		.thumb_func
 231              		.fpu fpv4-sp-d16
 233              	CAN1_TX_IRQHandler:
 234              	.LFB143:
 194:Core/Src/stm32f4xx_it.c **** 
 195:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 196:Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 197:Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 198:Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 199:Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 200:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 201:Core/Src/stm32f4xx_it.c **** 
 202:Core/Src/stm32f4xx_it.c **** /**
 203:Core/Src/stm32f4xx_it.c ****   * @brief This function handles CAN1 TX interrupt.
 204:Core/Src/stm32f4xx_it.c ****   */
 205:Core/Src/stm32f4xx_it.c **** void CAN1_TX_IRQHandler(void)
 206:Core/Src/stm32f4xx_it.c **** {
 235              		.loc 1 206 1 is_stmt 1 view -0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239 0000 08B5     		push	{r3, lr}
 240              		.cfi_def_cfa_offset 8
 241              		.cfi_offset 3, -8
 242              		.cfi_offset 14, -4
 207:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_TX_IRQn 0 */
 208:Core/Src/stm32f4xx_it.c **** 
 209:Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_TX_IRQn 0 */
 210:Core/Src/stm32f4xx_it.c ****   HAL_CAN_IRQHandler(&hcan1);
 243              		.loc 1 210 3 view .LVU30
 244 0002 0248     		ldr	r0, .L18
 245 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 246              	.LVL1:
 211:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_TX_IRQn 1 */
 212:Core/Src/stm32f4xx_it.c **** 
 213:Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_TX_IRQn 1 */
 214:Core/Src/stm32f4xx_it.c **** }
 247              		.loc 1 214 1 is_stmt 0 view .LVU31
 248 0008 08BD     		pop	{r3, pc}
 249              	.L19:
 250 000a 00BF     		.align	2
 251              	.L18:
 252 000c 00000000 		.word	hcan1
 253              		.cfi_endproc
 254              	.LFE143:
 256              		.section	.text.CAN1_RX0_IRQHandler,"ax",%progbits
 257              		.align	1
ARM GAS  /tmp/ccyOT5GX.s 			page 9


 258              		.global	CAN1_RX0_IRQHandler
 259              		.syntax unified
 260              		.thumb
 261              		.thumb_func
 262              		.fpu fpv4-sp-d16
 264              	CAN1_RX0_IRQHandler:
 265              	.LFB144:
 215:Core/Src/stm32f4xx_it.c **** 
 216:Core/Src/stm32f4xx_it.c **** /**
 217:Core/Src/stm32f4xx_it.c ****   * @brief This function handles CAN1 RX0 interrupt.
 218:Core/Src/stm32f4xx_it.c ****   */
 219:Core/Src/stm32f4xx_it.c **** void CAN1_RX0_IRQHandler(void)
 220:Core/Src/stm32f4xx_it.c **** {
 266              		.loc 1 220 1 is_stmt 1 view -0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 0, uses_anonymous_args = 0
 270 0000 08B5     		push	{r3, lr}
 271              		.cfi_def_cfa_offset 8
 272              		.cfi_offset 3, -8
 273              		.cfi_offset 14, -4
 221:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_RX0_IRQn 0 */
 222:Core/Src/stm32f4xx_it.c **** 
 223:Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_RX0_IRQn 0 */
 224:Core/Src/stm32f4xx_it.c ****   HAL_CAN_IRQHandler(&hcan1);
 274              		.loc 1 224 3 view .LVU33
 275 0002 0248     		ldr	r0, .L22
 276 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 277              	.LVL2:
 225:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_RX0_IRQn 1 */
 226:Core/Src/stm32f4xx_it.c **** 
 227:Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_RX0_IRQn 1 */
 228:Core/Src/stm32f4xx_it.c **** }
 278              		.loc 1 228 1 is_stmt 0 view .LVU34
 279 0008 08BD     		pop	{r3, pc}
 280              	.L23:
 281 000a 00BF     		.align	2
 282              	.L22:
 283 000c 00000000 		.word	hcan1
 284              		.cfi_endproc
 285              	.LFE144:
 287              		.section	.text.CAN1_RX1_IRQHandler,"ax",%progbits
 288              		.align	1
 289              		.global	CAN1_RX1_IRQHandler
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 293              		.fpu fpv4-sp-d16
 295              	CAN1_RX1_IRQHandler:
 296              	.LFB145:
 229:Core/Src/stm32f4xx_it.c **** 
 230:Core/Src/stm32f4xx_it.c **** /**
 231:Core/Src/stm32f4xx_it.c ****   * @brief This function handles CAN1 RX1 interrupt.
 232:Core/Src/stm32f4xx_it.c ****   */
 233:Core/Src/stm32f4xx_it.c **** void CAN1_RX1_IRQHandler(void)
 234:Core/Src/stm32f4xx_it.c **** {
 297              		.loc 1 234 1 is_stmt 1 view -0
ARM GAS  /tmp/ccyOT5GX.s 			page 10


 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301 0000 08B5     		push	{r3, lr}
 302              		.cfi_def_cfa_offset 8
 303              		.cfi_offset 3, -8
 304              		.cfi_offset 14, -4
 235:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_RX1_IRQn 0 */
 236:Core/Src/stm32f4xx_it.c **** 
 237:Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_RX1_IRQn 0 */
 238:Core/Src/stm32f4xx_it.c ****   HAL_CAN_IRQHandler(&hcan1);
 305              		.loc 1 238 3 view .LVU36
 306 0002 0248     		ldr	r0, .L26
 307 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 308              	.LVL3:
 239:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_RX1_IRQn 1 */
 240:Core/Src/stm32f4xx_it.c **** 
 241:Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_RX1_IRQn 1 */
 242:Core/Src/stm32f4xx_it.c **** }
 309              		.loc 1 242 1 is_stmt 0 view .LVU37
 310 0008 08BD     		pop	{r3, pc}
 311              	.L27:
 312 000a 00BF     		.align	2
 313              	.L26:
 314 000c 00000000 		.word	hcan1
 315              		.cfi_endproc
 316              	.LFE145:
 318              		.section	.text.CAN1_SCE_IRQHandler,"ax",%progbits
 319              		.align	1
 320              		.global	CAN1_SCE_IRQHandler
 321              		.syntax unified
 322              		.thumb
 323              		.thumb_func
 324              		.fpu fpv4-sp-d16
 326              	CAN1_SCE_IRQHandler:
 327              	.LFB146:
 243:Core/Src/stm32f4xx_it.c **** 
 244:Core/Src/stm32f4xx_it.c **** /**
 245:Core/Src/stm32f4xx_it.c ****   * @brief This function handles CAN1 SCE interrupt.
 246:Core/Src/stm32f4xx_it.c ****   */
 247:Core/Src/stm32f4xx_it.c **** void CAN1_SCE_IRQHandler(void)
 248:Core/Src/stm32f4xx_it.c **** {
 328              		.loc 1 248 1 is_stmt 1 view -0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332 0000 08B5     		push	{r3, lr}
 333              		.cfi_def_cfa_offset 8
 334              		.cfi_offset 3, -8
 335              		.cfi_offset 14, -4
 249:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_SCE_IRQn 0 */
 250:Core/Src/stm32f4xx_it.c **** 
 251:Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_SCE_IRQn 0 */
 252:Core/Src/stm32f4xx_it.c ****   HAL_CAN_IRQHandler(&hcan1);
 336              		.loc 1 252 3 view .LVU39
 337 0002 0248     		ldr	r0, .L30
 338 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
ARM GAS  /tmp/ccyOT5GX.s 			page 11


 339              	.LVL4:
 253:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_SCE_IRQn 1 */
 254:Core/Src/stm32f4xx_it.c **** 
 255:Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_SCE_IRQn 1 */
 256:Core/Src/stm32f4xx_it.c **** }
 340              		.loc 1 256 1 is_stmt 0 view .LVU40
 341 0008 08BD     		pop	{r3, pc}
 342              	.L31:
 343 000a 00BF     		.align	2
 344              	.L30:
 345 000c 00000000 		.word	hcan1
 346              		.cfi_endproc
 347              	.LFE146:
 349              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 350              		.align	1
 351              		.global	TIM2_IRQHandler
 352              		.syntax unified
 353              		.thumb
 354              		.thumb_func
 355              		.fpu fpv4-sp-d16
 357              	TIM2_IRQHandler:
 358              	.LFB147:
 257:Core/Src/stm32f4xx_it.c **** 
 258:Core/Src/stm32f4xx_it.c **** /**
 259:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM2 global interrupt.
 260:Core/Src/stm32f4xx_it.c ****   */
 261:Core/Src/stm32f4xx_it.c **** void TIM2_IRQHandler(void)
 262:Core/Src/stm32f4xx_it.c **** {
 359              		.loc 1 262 1 is_stmt 1 view -0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363 0000 08B5     		push	{r3, lr}
 364              		.cfi_def_cfa_offset 8
 365              		.cfi_offset 3, -8
 366              		.cfi_offset 14, -4
 263:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 264:Core/Src/stm32f4xx_it.c **** 
 265:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 266:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 367              		.loc 1 266 3 view .LVU42
 368 0002 0248     		ldr	r0, .L34
 369 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 370              	.LVL5:
 267:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 268:Core/Src/stm32f4xx_it.c **** 
 269:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 270:Core/Src/stm32f4xx_it.c **** }
 371              		.loc 1 270 1 is_stmt 0 view .LVU43
 372 0008 08BD     		pop	{r3, pc}
 373              	.L35:
 374 000a 00BF     		.align	2
 375              	.L34:
 376 000c 00000000 		.word	htim2
 377              		.cfi_endproc
 378              	.LFE147:
 380              		.text
ARM GAS  /tmp/ccyOT5GX.s 			page 12


 381              	.Letext0:
 382              		.file 2 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 383              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 384              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 385              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 386              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 387              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 388              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 389              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccyOT5GX.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccyOT5GX.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccyOT5GX.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccyOT5GX.s:44     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccyOT5GX.s:51     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccyOT5GX.s:68     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccyOT5GX.s:75     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccyOT5GX.s:92     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccyOT5GX.s:99     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccyOT5GX.s:116    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccyOT5GX.s:123    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccyOT5GX.s:140    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccyOT5GX.s:147    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccyOT5GX.s:160    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccyOT5GX.s:167    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccyOT5GX.s:180    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccyOT5GX.s:187    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccyOT5GX.s:200    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccyOT5GX.s:207    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccyOT5GX.s:226    .text.CAN1_TX_IRQHandler:0000000000000000 $t
     /tmp/ccyOT5GX.s:233    .text.CAN1_TX_IRQHandler:0000000000000000 CAN1_TX_IRQHandler
     /tmp/ccyOT5GX.s:252    .text.CAN1_TX_IRQHandler:000000000000000c $d
     /tmp/ccyOT5GX.s:257    .text.CAN1_RX0_IRQHandler:0000000000000000 $t
     /tmp/ccyOT5GX.s:264    .text.CAN1_RX0_IRQHandler:0000000000000000 CAN1_RX0_IRQHandler
     /tmp/ccyOT5GX.s:283    .text.CAN1_RX0_IRQHandler:000000000000000c $d
     /tmp/ccyOT5GX.s:288    .text.CAN1_RX1_IRQHandler:0000000000000000 $t
     /tmp/ccyOT5GX.s:295    .text.CAN1_RX1_IRQHandler:0000000000000000 CAN1_RX1_IRQHandler
     /tmp/ccyOT5GX.s:314    .text.CAN1_RX1_IRQHandler:000000000000000c $d
     /tmp/ccyOT5GX.s:319    .text.CAN1_SCE_IRQHandler:0000000000000000 $t
     /tmp/ccyOT5GX.s:326    .text.CAN1_SCE_IRQHandler:0000000000000000 CAN1_SCE_IRQHandler
     /tmp/ccyOT5GX.s:345    .text.CAN1_SCE_IRQHandler:000000000000000c $d
     /tmp/ccyOT5GX.s:350    .text.TIM2_IRQHandler:0000000000000000 $t
     /tmp/ccyOT5GX.s:357    .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
     /tmp/ccyOT5GX.s:376    .text.TIM2_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_CAN_IRQHandler
hcan1
HAL_TIM_IRQHandler
htim2
