ARM GAS  /tmp/ccPxQBnR.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"can.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_CAN1_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_CAN1_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	MX_CAN1_Init:
  27              	.LFB134:
  28              		.file 1 "Core/Src/can.c"
   1:Core/Src/can.c **** /* USER CODE BEGIN Header */
   2:Core/Src/can.c **** /**
   3:Core/Src/can.c ****  ******************************************************************************
   4:Core/Src/can.c ****  * @file    can.c
   5:Core/Src/can.c ****  * @brief   This file provides code for the configuration
   6:Core/Src/can.c ****  *          of the CAN instances.
   7:Core/Src/can.c ****  ******************************************************************************
   8:Core/Src/can.c ****  * @attention
   9:Core/Src/can.c ****  *
  10:Core/Src/can.c ****  * Copyright (c) 2024 STMicroelectronics.
  11:Core/Src/can.c ****  * All rights reserved.
  12:Core/Src/can.c ****  *
  13:Core/Src/can.c ****  * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/can.c ****  * in the root directory of this software component.
  15:Core/Src/can.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/can.c ****  *
  17:Core/Src/can.c ****  ******************************************************************************
  18:Core/Src/can.c ****  */
  19:Core/Src/can.c **** /* USER CODE END Header */
  20:Core/Src/can.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/can.c **** #include "can.h"
  22:Core/Src/can.c **** 
  23:Core/Src/can.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/can.c **** 
  25:Core/Src/can.c **** /* USER CODE END 0 */
  26:Core/Src/can.c **** 
  27:Core/Src/can.c **** CAN_HandleTypeDef hcan1;
  28:Core/Src/can.c **** 
  29:Core/Src/can.c **** /* CAN1 init function */
  30:Core/Src/can.c **** void MX_CAN1_Init(void)
ARM GAS  /tmp/ccPxQBnR.s 			page 2


  31:Core/Src/can.c **** {
  29              		.loc 1 31 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 40
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 10B5     		push	{r4, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37 0002 8AB0     		sub	sp, sp, #40
  38              		.cfi_def_cfa_offset 48
  32:Core/Src/can.c **** 
  33:Core/Src/can.c ****   /* USER CODE BEGIN CAN1_Init 0 */
  34:Core/Src/can.c **** 
  35:Core/Src/can.c ****   /* USER CODE END CAN1_Init 0 */
  36:Core/Src/can.c **** 
  37:Core/Src/can.c ****   /* USER CODE BEGIN CAN1_Init 1 */
  38:Core/Src/can.c **** 
  39:Core/Src/can.c ****   /* USER CODE END CAN1_Init 1 */
  40:Core/Src/can.c ****   hcan1.Instance = CAN1;
  39              		.loc 1 40 3 view .LVU1
  40              		.loc 1 40 18 is_stmt 0 view .LVU2
  41 0004 1E48     		ldr	r0, .L7
  42 0006 1F4B     		ldr	r3, .L7+4
  43 0008 0360     		str	r3, [r0]
  41:Core/Src/can.c ****   hcan1.Init.Prescaler = 3;
  44              		.loc 1 41 3 is_stmt 1 view .LVU3
  45              		.loc 1 41 24 is_stmt 0 view .LVU4
  46 000a 0323     		movs	r3, #3
  47 000c 4360     		str	r3, [r0, #4]
  42:Core/Src/can.c ****   hcan1.Init.Mode = CAN_MODE_LOOPBACK;
  48              		.loc 1 42 3 is_stmt 1 view .LVU5
  49              		.loc 1 42 19 is_stmt 0 view .LVU6
  50 000e 4FF08043 		mov	r3, #1073741824
  51 0012 8360     		str	r3, [r0, #8]
  43:Core/Src/can.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
  52              		.loc 1 43 3 is_stmt 1 view .LVU7
  53              		.loc 1 43 28 is_stmt 0 view .LVU8
  54 0014 0023     		movs	r3, #0
  55 0016 C360     		str	r3, [r0, #12]
  44:Core/Src/can.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_12TQ;
  56              		.loc 1 44 3 is_stmt 1 view .LVU9
  57              		.loc 1 44 23 is_stmt 0 view .LVU10
  58 0018 4FF43022 		mov	r2, #720896
  59 001c 0261     		str	r2, [r0, #16]
  45:Core/Src/can.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
  60              		.loc 1 45 3 is_stmt 1 view .LVU11
  61              		.loc 1 45 23 is_stmt 0 view .LVU12
  62 001e 4FF48012 		mov	r2, #1048576
  63 0022 4261     		str	r2, [r0, #20]
  46:Core/Src/can.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
  64              		.loc 1 46 3 is_stmt 1 view .LVU13
  65              		.loc 1 46 32 is_stmt 0 view .LVU14
  66 0024 0376     		strb	r3, [r0, #24]
  47:Core/Src/can.c ****   hcan1.Init.AutoBusOff = DISABLE;
  67              		.loc 1 47 3 is_stmt 1 view .LVU15
  68              		.loc 1 47 25 is_stmt 0 view .LVU16
ARM GAS  /tmp/ccPxQBnR.s 			page 3


  69 0026 4376     		strb	r3, [r0, #25]
  48:Core/Src/can.c ****   hcan1.Init.AutoWakeUp = DISABLE;
  70              		.loc 1 48 3 is_stmt 1 view .LVU17
  71              		.loc 1 48 25 is_stmt 0 view .LVU18
  72 0028 8376     		strb	r3, [r0, #26]
  49:Core/Src/can.c ****   hcan1.Init.AutoRetransmission = DISABLE;
  73              		.loc 1 49 3 is_stmt 1 view .LVU19
  74              		.loc 1 49 33 is_stmt 0 view .LVU20
  75 002a C376     		strb	r3, [r0, #27]
  50:Core/Src/can.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
  76              		.loc 1 50 3 is_stmt 1 view .LVU21
  77              		.loc 1 50 32 is_stmt 0 view .LVU22
  78 002c 0377     		strb	r3, [r0, #28]
  51:Core/Src/can.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
  79              		.loc 1 51 3 is_stmt 1 view .LVU23
  80              		.loc 1 51 35 is_stmt 0 view .LVU24
  81 002e 4377     		strb	r3, [r0, #29]
  52:Core/Src/can.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
  82              		.loc 1 52 3 is_stmt 1 view .LVU25
  83              		.loc 1 52 7 is_stmt 0 view .LVU26
  84 0030 FFF7FEFF 		bl	HAL_CAN_Init
  85              	.LVL0:
  86              		.loc 1 52 6 view .LVU27
  87 0034 E8B9     		cbnz	r0, .L5
  88              	.L2:
  53:Core/Src/can.c ****   {
  54:Core/Src/can.c ****     Error_Handler();
  55:Core/Src/can.c ****   }
  56:Core/Src/can.c ****   /* USER CODE BEGIN CAN1_Init 2 */
  57:Core/Src/can.c ****   CAN_FilterTypeDef sFilterConfig;
  89              		.loc 1 57 3 is_stmt 1 view .LVU28
  58:Core/Src/can.c **** 
  59:Core/Src/can.c ****   // Configure filter for CAN1
  60:Core/Src/can.c ****   sFilterConfig.FilterActivation = CAN_FILTER_ENABLE;
  90              		.loc 1 60 3 view .LVU29
  91              		.loc 1 60 34 is_stmt 0 view .LVU30
  92 0036 0123     		movs	r3, #1
  93 0038 0893     		str	r3, [sp, #32]
  61:Core/Src/can.c ****   sFilterConfig.FilterBank = 0; // Filter bank to use (0 in this case)
  94              		.loc 1 61 3 is_stmt 1 view .LVU31
  95              		.loc 1 61 28 is_stmt 0 view .LVU32
  96 003a 0023     		movs	r3, #0
  97 003c 0593     		str	r3, [sp, #20]
  62:Core/Src/can.c ****   sFilterConfig.FilterFIFOAssignment = CAN_FILTER_FIFO0;
  98              		.loc 1 62 3 is_stmt 1 view .LVU33
  99              		.loc 1 62 38 is_stmt 0 view .LVU34
 100 003e 0493     		str	r3, [sp, #16]
  63:Core/Src/can.c ****   sFilterConfig.FilterIdHigh = (0x41 << 5);
 101              		.loc 1 63 3 is_stmt 1 view .LVU35
 102              		.loc 1 63 30 is_stmt 0 view .LVU36
 103 0040 4FF40262 		mov	r2, #2080
 104 0044 0092     		str	r2, [sp]
  64:Core/Src/can.c ****   sFilterConfig.FilterIdLow = 0x0000;
 105              		.loc 1 64 3 is_stmt 1 view .LVU37
 106              		.loc 1 64 29 is_stmt 0 view .LVU38
 107 0046 0193     		str	r3, [sp, #4]
  65:Core/Src/can.c ****   sFilterConfig.FilterMaskIdHigh = (0xFFFF << 5);
ARM GAS  /tmp/ccPxQBnR.s 			page 4


 108              		.loc 1 65 3 is_stmt 1 view .LVU39
 109              		.loc 1 65 34 is_stmt 0 view .LVU40
 110 0048 0F4A     		ldr	r2, .L7+8
 111 004a 0292     		str	r2, [sp, #8]
  66:Core/Src/can.c ****   sFilterConfig.FilterMaskIdLow = 0x0000;
 112              		.loc 1 66 3 is_stmt 1 view .LVU41
 113              		.loc 1 66 33 is_stmt 0 view .LVU42
 114 004c 0393     		str	r3, [sp, #12]
  67:Core/Src/can.c ****   sFilterConfig.FilterMode = CAN_FILTERMODE_IDMASK;
 115              		.loc 1 67 3 is_stmt 1 view .LVU43
 116              		.loc 1 67 28 is_stmt 0 view .LVU44
 117 004e 0693     		str	r3, [sp, #24]
  68:Core/Src/can.c ****   sFilterConfig.FilterScale = CAN_FILTERSCALE_16BIT;
 118              		.loc 1 68 3 is_stmt 1 view .LVU45
 119              		.loc 1 68 29 is_stmt 0 view .LVU46
 120 0050 0793     		str	r3, [sp, #28]
  69:Core/Src/can.c **** 
  70:Core/Src/can.c ****   // Apply the filter configuration
  71:Core/Src/can.c ****   if (HAL_CAN_ConfigFilter(&hcan1, &sFilterConfig) != HAL_OK)
 121              		.loc 1 71 3 is_stmt 1 view .LVU47
 122              		.loc 1 71 7 is_stmt 0 view .LVU48
 123 0052 6946     		mov	r1, sp
 124 0054 0A48     		ldr	r0, .L7
 125 0056 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 126              	.LVL1:
 127              		.loc 1 71 6 view .LVU49
 128 005a 68B9     		cbnz	r0, .L6
 129              	.L3:
  72:Core/Src/can.c ****   {
  73:Core/Src/can.c ****     // Handle filter configuration error
  74:Core/Src/can.c ****     Error_Handler();
  75:Core/Src/can.c ****   }
  76:Core/Src/can.c **** 
  77:Core/Src/can.c ****   HAL_CAN_ActivateNotification(&hcan1,CAN_IT_RX_FIFO0_MSG_PENDING |
 130              		.loc 1 77 3 is_stmt 1 view .LVU50
 131 005c 084C     		ldr	r4, .L7
 132 005e 48F60271 		movw	r1, #36610
 133 0062 2046     		mov	r0, r4
 134 0064 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 135              	.LVL2:
  78:Core/Src/can.c ****                                    CAN_IT_ERROR_WARNING |
  79:Core/Src/can.c ****                                    CAN_IT_ERROR_PASSIVE |
  80:Core/Src/can.c ****                                    CAN_IT_BUSOFF |
  81:Core/Src/can.c ****                                    CAN_IT_LAST_ERROR_CODE |
  82:Core/Src/can.c ****                                    CAN_IT_ERROR);
  83:Core/Src/can.c ****   HAL_CAN_Start(&hcan1);
 136              		.loc 1 83 3 view .LVU51
 137 0068 2046     		mov	r0, r4
 138 006a FFF7FEFF 		bl	HAL_CAN_Start
 139              	.LVL3:
  84:Core/Src/can.c ****   /* USER CODE END CAN1_Init 2 */
  85:Core/Src/can.c **** }
 140              		.loc 1 85 1 is_stmt 0 view .LVU52
 141 006e 0AB0     		add	sp, sp, #40
 142              		.cfi_remember_state
 143              		.cfi_def_cfa_offset 8
 144              		@ sp needed
ARM GAS  /tmp/ccPxQBnR.s 			page 5


 145 0070 10BD     		pop	{r4, pc}
 146              	.L5:
 147              		.cfi_restore_state
  54:Core/Src/can.c ****   }
 148              		.loc 1 54 5 is_stmt 1 view .LVU53
 149 0072 FFF7FEFF 		bl	Error_Handler
 150              	.LVL4:
 151 0076 DEE7     		b	.L2
 152              	.L6:
  74:Core/Src/can.c ****   }
 153              		.loc 1 74 5 view .LVU54
 154 0078 FFF7FEFF 		bl	Error_Handler
 155              	.LVL5:
 156 007c EEE7     		b	.L3
 157              	.L8:
 158 007e 00BF     		.align	2
 159              	.L7:
 160 0080 00000000 		.word	.LANCHOR0
 161 0084 00640040 		.word	1073767424
 162 0088 E0FF1F00 		.word	2097120
 163              		.cfi_endproc
 164              	.LFE134:
 166              		.section	.text.HAL_CAN_MspInit,"ax",%progbits
 167              		.align	1
 168              		.global	HAL_CAN_MspInit
 169              		.syntax unified
 170              		.thumb
 171              		.thumb_func
 172              		.fpu fpv4-sp-d16
 174              	HAL_CAN_MspInit:
 175              	.LVL6:
 176              	.LFB135:
  86:Core/Src/can.c **** 
  87:Core/Src/can.c **** void HAL_CAN_MspInit(CAN_HandleTypeDef *canHandle)
  88:Core/Src/can.c **** {
 177              		.loc 1 88 1 view -0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 32
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181              		.loc 1 88 1 is_stmt 0 view .LVU56
 182 0000 10B5     		push	{r4, lr}
 183              		.cfi_def_cfa_offset 8
 184              		.cfi_offset 4, -8
 185              		.cfi_offset 14, -4
 186 0002 88B0     		sub	sp, sp, #32
 187              		.cfi_def_cfa_offset 40
  89:Core/Src/can.c **** 
  90:Core/Src/can.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 188              		.loc 1 90 3 is_stmt 1 view .LVU57
 189              		.loc 1 90 20 is_stmt 0 view .LVU58
 190 0004 0023     		movs	r3, #0
 191 0006 0393     		str	r3, [sp, #12]
 192 0008 0493     		str	r3, [sp, #16]
 193 000a 0593     		str	r3, [sp, #20]
 194 000c 0693     		str	r3, [sp, #24]
 195 000e 0793     		str	r3, [sp, #28]
  91:Core/Src/can.c ****   if (canHandle->Instance == CAN1)
ARM GAS  /tmp/ccPxQBnR.s 			page 6


 196              		.loc 1 91 3 is_stmt 1 view .LVU59
 197              		.loc 1 91 16 is_stmt 0 view .LVU60
 198 0010 0268     		ldr	r2, [r0]
 199              		.loc 1 91 6 view .LVU61
 200 0012 254B     		ldr	r3, .L13
 201 0014 9A42     		cmp	r2, r3
 202 0016 01D0     		beq	.L12
 203              	.LVL7:
 204              	.L9:
  92:Core/Src/can.c ****   {
  93:Core/Src/can.c ****     /* USER CODE BEGIN CAN1_MspInit 0 */
  94:Core/Src/can.c **** 
  95:Core/Src/can.c ****     /* USER CODE END CAN1_MspInit 0 */
  96:Core/Src/can.c ****     /* CAN1 clock enable */
  97:Core/Src/can.c ****     __HAL_RCC_CAN1_CLK_ENABLE();
  98:Core/Src/can.c **** 
  99:Core/Src/can.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 100:Core/Src/can.c ****     /**CAN1 GPIO Configuration
 101:Core/Src/can.c ****     PA11     ------> CAN1_RX
 102:Core/Src/can.c ****     PA12     ------> CAN1_TX
 103:Core/Src/can.c ****     */
 104:Core/Src/can.c ****     GPIO_InitStruct.Pin = GPIO_PIN_11 | GPIO_PIN_12;
 105:Core/Src/can.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 106:Core/Src/can.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 107:Core/Src/can.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 108:Core/Src/can.c ****     GPIO_InitStruct.Alternate = GPIO_AF9_CAN1;
 109:Core/Src/can.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 110:Core/Src/can.c **** 
 111:Core/Src/can.c ****     /* CAN1 interrupt Init */
 112:Core/Src/can.c ****     HAL_NVIC_SetPriority(CAN1_TX_IRQn, 0, 0);
 113:Core/Src/can.c ****     HAL_NVIC_EnableIRQ(CAN1_TX_IRQn);
 114:Core/Src/can.c ****     HAL_NVIC_SetPriority(CAN1_RX0_IRQn, 0, 0);
 115:Core/Src/can.c ****     HAL_NVIC_EnableIRQ(CAN1_RX0_IRQn);
 116:Core/Src/can.c ****     HAL_NVIC_SetPriority(CAN1_RX1_IRQn, 0, 0);
 117:Core/Src/can.c ****     HAL_NVIC_EnableIRQ(CAN1_RX1_IRQn);
 118:Core/Src/can.c ****     HAL_NVIC_SetPriority(CAN1_SCE_IRQn, 0, 0);
 119:Core/Src/can.c ****     HAL_NVIC_EnableIRQ(CAN1_SCE_IRQn);
 120:Core/Src/can.c ****     /* USER CODE BEGIN CAN1_MspInit 1 */
 121:Core/Src/can.c **** 
 122:Core/Src/can.c ****     /* USER CODE END CAN1_MspInit 1 */
 123:Core/Src/can.c ****   }
 124:Core/Src/can.c **** }
 205              		.loc 1 124 1 view .LVU62
 206 0018 08B0     		add	sp, sp, #32
 207              		.cfi_remember_state
 208              		.cfi_def_cfa_offset 8
 209              		@ sp needed
 210 001a 10BD     		pop	{r4, pc}
 211              	.LVL8:
 212              	.L12:
 213              		.cfi_restore_state
  97:Core/Src/can.c **** 
 214              		.loc 1 97 5 is_stmt 1 view .LVU63
 215              	.LBB2:
  97:Core/Src/can.c **** 
 216              		.loc 1 97 5 view .LVU64
 217 001c 0024     		movs	r4, #0
ARM GAS  /tmp/ccPxQBnR.s 			page 7


 218 001e 0194     		str	r4, [sp, #4]
  97:Core/Src/can.c **** 
 219              		.loc 1 97 5 view .LVU65
 220 0020 03F5EA33 		add	r3, r3, #119808
 221 0024 1A6C     		ldr	r2, [r3, #64]
 222 0026 42F00072 		orr	r2, r2, #33554432
 223 002a 1A64     		str	r2, [r3, #64]
  97:Core/Src/can.c **** 
 224              		.loc 1 97 5 view .LVU66
 225 002c 1A6C     		ldr	r2, [r3, #64]
 226 002e 02F00072 		and	r2, r2, #33554432
 227 0032 0192     		str	r2, [sp, #4]
  97:Core/Src/can.c **** 
 228              		.loc 1 97 5 view .LVU67
 229 0034 019A     		ldr	r2, [sp, #4]
 230              	.LBE2:
  97:Core/Src/can.c **** 
 231              		.loc 1 97 5 view .LVU68
  99:Core/Src/can.c ****     /**CAN1 GPIO Configuration
 232              		.loc 1 99 5 view .LVU69
 233              	.LBB3:
  99:Core/Src/can.c ****     /**CAN1 GPIO Configuration
 234              		.loc 1 99 5 view .LVU70
 235 0036 0294     		str	r4, [sp, #8]
  99:Core/Src/can.c ****     /**CAN1 GPIO Configuration
 236              		.loc 1 99 5 view .LVU71
 237 0038 1A6B     		ldr	r2, [r3, #48]
 238 003a 42F00102 		orr	r2, r2, #1
 239 003e 1A63     		str	r2, [r3, #48]
  99:Core/Src/can.c ****     /**CAN1 GPIO Configuration
 240              		.loc 1 99 5 view .LVU72
 241 0040 1B6B     		ldr	r3, [r3, #48]
 242 0042 03F00103 		and	r3, r3, #1
 243 0046 0293     		str	r3, [sp, #8]
  99:Core/Src/can.c ****     /**CAN1 GPIO Configuration
 244              		.loc 1 99 5 view .LVU73
 245 0048 029B     		ldr	r3, [sp, #8]
 246              	.LBE3:
  99:Core/Src/can.c ****     /**CAN1 GPIO Configuration
 247              		.loc 1 99 5 view .LVU74
 104:Core/Src/can.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 248              		.loc 1 104 5 view .LVU75
 104:Core/Src/can.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 249              		.loc 1 104 25 is_stmt 0 view .LVU76
 250 004a 4FF4C053 		mov	r3, #6144
 251 004e 0393     		str	r3, [sp, #12]
 105:Core/Src/can.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 252              		.loc 1 105 5 is_stmt 1 view .LVU77
 105:Core/Src/can.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 253              		.loc 1 105 26 is_stmt 0 view .LVU78
 254 0050 0223     		movs	r3, #2
 255 0052 0493     		str	r3, [sp, #16]
 106:Core/Src/can.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 256              		.loc 1 106 5 is_stmt 1 view .LVU79
 107:Core/Src/can.c ****     GPIO_InitStruct.Alternate = GPIO_AF9_CAN1;
 257              		.loc 1 107 5 view .LVU80
 107:Core/Src/can.c ****     GPIO_InitStruct.Alternate = GPIO_AF9_CAN1;
ARM GAS  /tmp/ccPxQBnR.s 			page 8


 258              		.loc 1 107 27 is_stmt 0 view .LVU81
 259 0054 0323     		movs	r3, #3
 260 0056 0693     		str	r3, [sp, #24]
 108:Core/Src/can.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 261              		.loc 1 108 5 is_stmt 1 view .LVU82
 108:Core/Src/can.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 262              		.loc 1 108 31 is_stmt 0 view .LVU83
 263 0058 0923     		movs	r3, #9
 264 005a 0793     		str	r3, [sp, #28]
 109:Core/Src/can.c **** 
 265              		.loc 1 109 5 is_stmt 1 view .LVU84
 266 005c 03A9     		add	r1, sp, #12
 267 005e 1348     		ldr	r0, .L13+4
 268              	.LVL9:
 109:Core/Src/can.c **** 
 269              		.loc 1 109 5 is_stmt 0 view .LVU85
 270 0060 FFF7FEFF 		bl	HAL_GPIO_Init
 271              	.LVL10:
 112:Core/Src/can.c ****     HAL_NVIC_EnableIRQ(CAN1_TX_IRQn);
 272              		.loc 1 112 5 is_stmt 1 view .LVU86
 273 0064 2246     		mov	r2, r4
 274 0066 2146     		mov	r1, r4
 275 0068 1320     		movs	r0, #19
 276 006a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 277              	.LVL11:
 113:Core/Src/can.c ****     HAL_NVIC_SetPriority(CAN1_RX0_IRQn, 0, 0);
 278              		.loc 1 113 5 view .LVU87
 279 006e 1320     		movs	r0, #19
 280 0070 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 281              	.LVL12:
 114:Core/Src/can.c ****     HAL_NVIC_EnableIRQ(CAN1_RX0_IRQn);
 282              		.loc 1 114 5 view .LVU88
 283 0074 2246     		mov	r2, r4
 284 0076 2146     		mov	r1, r4
 285 0078 1420     		movs	r0, #20
 286 007a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 287              	.LVL13:
 115:Core/Src/can.c ****     HAL_NVIC_SetPriority(CAN1_RX1_IRQn, 0, 0);
 288              		.loc 1 115 5 view .LVU89
 289 007e 1420     		movs	r0, #20
 290 0080 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 291              	.LVL14:
 116:Core/Src/can.c ****     HAL_NVIC_EnableIRQ(CAN1_RX1_IRQn);
 292              		.loc 1 116 5 view .LVU90
 293 0084 2246     		mov	r2, r4
 294 0086 2146     		mov	r1, r4
 295 0088 1520     		movs	r0, #21
 296 008a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 297              	.LVL15:
 117:Core/Src/can.c ****     HAL_NVIC_SetPriority(CAN1_SCE_IRQn, 0, 0);
 298              		.loc 1 117 5 view .LVU91
 299 008e 1520     		movs	r0, #21
 300 0090 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 301              	.LVL16:
 118:Core/Src/can.c ****     HAL_NVIC_EnableIRQ(CAN1_SCE_IRQn);
 302              		.loc 1 118 5 view .LVU92
 303 0094 2246     		mov	r2, r4
ARM GAS  /tmp/ccPxQBnR.s 			page 9


 304 0096 2146     		mov	r1, r4
 305 0098 1620     		movs	r0, #22
 306 009a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 307              	.LVL17:
 119:Core/Src/can.c ****     /* USER CODE BEGIN CAN1_MspInit 1 */
 308              		.loc 1 119 5 view .LVU93
 309 009e 1620     		movs	r0, #22
 310 00a0 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 311              	.LVL18:
 312              		.loc 1 124 1 is_stmt 0 view .LVU94
 313 00a4 B8E7     		b	.L9
 314              	.L14:
 315 00a6 00BF     		.align	2
 316              	.L13:
 317 00a8 00640040 		.word	1073767424
 318 00ac 00000240 		.word	1073872896
 319              		.cfi_endproc
 320              	.LFE135:
 322              		.section	.text.HAL_CAN_MspDeInit,"ax",%progbits
 323              		.align	1
 324              		.global	HAL_CAN_MspDeInit
 325              		.syntax unified
 326              		.thumb
 327              		.thumb_func
 328              		.fpu fpv4-sp-d16
 330              	HAL_CAN_MspDeInit:
 331              	.LVL19:
 332              	.LFB136:
 125:Core/Src/can.c **** 
 126:Core/Src/can.c **** void HAL_CAN_MspDeInit(CAN_HandleTypeDef *canHandle)
 127:Core/Src/can.c **** {
 333              		.loc 1 127 1 is_stmt 1 view -0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
 337              		.loc 1 127 1 is_stmt 0 view .LVU96
 338 0000 08B5     		push	{r3, lr}
 339              		.cfi_def_cfa_offset 8
 340              		.cfi_offset 3, -8
 341              		.cfi_offset 14, -4
 128:Core/Src/can.c **** 
 129:Core/Src/can.c ****   if (canHandle->Instance == CAN1)
 342              		.loc 1 129 3 is_stmt 1 view .LVU97
 343              		.loc 1 129 16 is_stmt 0 view .LVU98
 344 0002 0268     		ldr	r2, [r0]
 345              		.loc 1 129 6 view .LVU99
 346 0004 0D4B     		ldr	r3, .L19
 347 0006 9A42     		cmp	r2, r3
 348 0008 00D0     		beq	.L18
 349              	.LVL20:
 350              	.L15:
 130:Core/Src/can.c ****   {
 131:Core/Src/can.c ****     /* USER CODE BEGIN CAN1_MspDeInit 0 */
 132:Core/Src/can.c **** 
 133:Core/Src/can.c ****     /* USER CODE END CAN1_MspDeInit 0 */
 134:Core/Src/can.c ****     /* Peripheral clock disable */
 135:Core/Src/can.c ****     __HAL_RCC_CAN1_CLK_DISABLE();
ARM GAS  /tmp/ccPxQBnR.s 			page 10


 136:Core/Src/can.c **** 
 137:Core/Src/can.c ****     /**CAN1 GPIO Configuration
 138:Core/Src/can.c ****     PA11     ------> CAN1_RX
 139:Core/Src/can.c ****     PA12     ------> CAN1_TX
 140:Core/Src/can.c ****     */
 141:Core/Src/can.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_11 | GPIO_PIN_12);
 142:Core/Src/can.c **** 
 143:Core/Src/can.c ****     /* CAN1 interrupt Deinit */
 144:Core/Src/can.c ****     HAL_NVIC_DisableIRQ(CAN1_TX_IRQn);
 145:Core/Src/can.c ****     HAL_NVIC_DisableIRQ(CAN1_RX0_IRQn);
 146:Core/Src/can.c ****     HAL_NVIC_DisableIRQ(CAN1_RX1_IRQn);
 147:Core/Src/can.c ****     HAL_NVIC_DisableIRQ(CAN1_SCE_IRQn);
 148:Core/Src/can.c ****     /* USER CODE BEGIN CAN1_MspDeInit 1 */
 149:Core/Src/can.c **** 
 150:Core/Src/can.c ****     /* USER CODE END CAN1_MspDeInit 1 */
 151:Core/Src/can.c ****   }
 152:Core/Src/can.c **** }
 351              		.loc 1 152 1 view .LVU100
 352 000a 08BD     		pop	{r3, pc}
 353              	.LVL21:
 354              	.L18:
 135:Core/Src/can.c **** 
 355              		.loc 1 135 5 is_stmt 1 view .LVU101
 356 000c 0C4A     		ldr	r2, .L19+4
 357 000e 136C     		ldr	r3, [r2, #64]
 358 0010 23F00073 		bic	r3, r3, #33554432
 359 0014 1364     		str	r3, [r2, #64]
 141:Core/Src/can.c **** 
 360              		.loc 1 141 5 view .LVU102
 361 0016 4FF4C051 		mov	r1, #6144
 362 001a 0A48     		ldr	r0, .L19+8
 363              	.LVL22:
 141:Core/Src/can.c **** 
 364              		.loc 1 141 5 is_stmt 0 view .LVU103
 365 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 366              	.LVL23:
 144:Core/Src/can.c ****     HAL_NVIC_DisableIRQ(CAN1_RX0_IRQn);
 367              		.loc 1 144 5 is_stmt 1 view .LVU104
 368 0020 1320     		movs	r0, #19
 369 0022 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 370              	.LVL24:
 145:Core/Src/can.c ****     HAL_NVIC_DisableIRQ(CAN1_RX1_IRQn);
 371              		.loc 1 145 5 view .LVU105
 372 0026 1420     		movs	r0, #20
 373 0028 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 374              	.LVL25:
 146:Core/Src/can.c ****     HAL_NVIC_DisableIRQ(CAN1_SCE_IRQn);
 375              		.loc 1 146 5 view .LVU106
 376 002c 1520     		movs	r0, #21
 377 002e FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 378              	.LVL26:
 147:Core/Src/can.c ****     /* USER CODE BEGIN CAN1_MspDeInit 1 */
 379              		.loc 1 147 5 view .LVU107
 380 0032 1620     		movs	r0, #22
 381 0034 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 382              	.LVL27:
 383              		.loc 1 152 1 is_stmt 0 view .LVU108
ARM GAS  /tmp/ccPxQBnR.s 			page 11


 384 0038 E7E7     		b	.L15
 385              	.L20:
 386 003a 00BF     		.align	2
 387              	.L19:
 388 003c 00640040 		.word	1073767424
 389 0040 00380240 		.word	1073887232
 390 0044 00000240 		.word	1073872896
 391              		.cfi_endproc
 392              	.LFE136:
 394              		.section	.text.can_wait,"ax",%progbits
 395              		.align	1
 396              		.global	can_wait
 397              		.syntax unified
 398              		.thumb
 399              		.thumb_func
 400              		.fpu fpv4-sp-d16
 402              	can_wait:
 403              	.LVL28:
 404              	.LFB137:
 153:Core/Src/can.c **** 
 154:Core/Src/can.c **** /* USER CODE BEGIN 1 */
 155:Core/Src/can.c **** 
 156:Core/Src/can.c **** // wait for the CAN Tx to be ready
 157:Core/Src/can.c **** HAL_StatusTypeDef can_wait(CAN_HandleTypeDef *hcan, uint8_t timeout)
 158:Core/Src/can.c **** {
 405              		.loc 1 158 1 is_stmt 1 view -0
 406              		.cfi_startproc
 407              		@ args = 0, pretend = 0, frame = 0
 408              		@ frame_needed = 0, uses_anonymous_args = 0
 409              		.loc 1 158 1 is_stmt 0 view .LVU110
 410 0000 70B5     		push	{r4, r5, r6, lr}
 411              		.cfi_def_cfa_offset 16
 412              		.cfi_offset 4, -16
 413              		.cfi_offset 5, -12
 414              		.cfi_offset 6, -8
 415              		.cfi_offset 14, -4
 416 0002 0446     		mov	r4, r0
 417 0004 0E46     		mov	r6, r1
 159:Core/Src/can.c ****   uint32_t tick = HAL_GetTick();
 418              		.loc 1 159 3 is_stmt 1 view .LVU111
 419              		.loc 1 159 19 is_stmt 0 view .LVU112
 420 0006 FFF7FEFF 		bl	HAL_GetTick
 421              	.LVL29:
 422              		.loc 1 159 19 view .LVU113
 423 000a 0546     		mov	r5, r0
 424              	.LVL30:
 160:Core/Src/can.c ****   while (HAL_CAN_GetTxMailboxesFreeLevel(hcan) == 0)
 425              		.loc 1 160 3 is_stmt 1 view .LVU114
 426              	.L22:
 427              		.loc 1 160 9 view .LVU115
 428              		.loc 1 160 10 is_stmt 0 view .LVU116
 429 000c 2046     		mov	r0, r4
 430 000e FFF7FEFF 		bl	HAL_CAN_GetTxMailboxesFreeLevel
 431              	.LVL31:
 432              		.loc 1 160 9 view .LVU117
 433 0012 30B9     		cbnz	r0, .L27
 161:Core/Src/can.c ****   {
ARM GAS  /tmp/ccPxQBnR.s 			page 12


 162:Core/Src/can.c ****     if (HAL_GetTick() - tick > timeout)
 434              		.loc 1 162 5 is_stmt 1 view .LVU118
 435              		.loc 1 162 9 is_stmt 0 view .LVU119
 436 0014 FFF7FEFF 		bl	HAL_GetTick
 437              	.LVL32:
 438              		.loc 1 162 23 view .LVU120
 439 0018 431B     		subs	r3, r0, r5
 440              		.loc 1 162 8 view .LVU121
 441 001a B342     		cmp	r3, r6
 442 001c F6D9     		bls	.L22
 163:Core/Src/can.c ****       return HAL_TIMEOUT;
 443              		.loc 1 163 14 view .LVU122
 444 001e 0320     		movs	r0, #3
 445 0020 00E0     		b	.L23
 446              	.L27:
 164:Core/Src/can.c ****   }
 165:Core/Src/can.c ****   return HAL_OK;
 447              		.loc 1 165 10 view .LVU123
 448 0022 0020     		movs	r0, #0
 449              	.L23:
 166:Core/Src/can.c **** }
 450              		.loc 1 166 1 view .LVU124
 451 0024 70BD     		pop	{r4, r5, r6, pc}
 452              		.loc 1 166 1 view .LVU125
 453              		.cfi_endproc
 454              	.LFE137:
 456              		.section	.text.can_send,"ax",%progbits
 457              		.align	1
 458              		.global	can_send
 459              		.syntax unified
 460              		.thumb
 461              		.thumb_func
 462              		.fpu fpv4-sp-d16
 464              	can_send:
 465              	.LVL33:
 466              	.LFB138:
 167:Core/Src/can.c **** 
 168:Core/Src/can.c **** // send messages on the CAN bus
 169:Core/Src/can.c **** HAL_StatusTypeDef can_send(CAN_HandleTypeDef *hcan, uint8_t *buffer, CAN_TxHeaderTypeDef *header, u
 170:Core/Src/can.c **** {
 467              		.loc 1 170 1 is_stmt 1 view -0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 8
 470              		@ frame_needed = 0, uses_anonymous_args = 0
 471              		.loc 1 170 1 is_stmt 0 view .LVU127
 472 0000 70B5     		push	{r4, r5, r6, lr}
 473              		.cfi_def_cfa_offset 16
 474              		.cfi_offset 4, -16
 475              		.cfi_offset 5, -12
 476              		.cfi_offset 6, -8
 477              		.cfi_offset 14, -4
 478 0002 82B0     		sub	sp, sp, #8
 479              		.cfi_def_cfa_offset 24
 480 0004 0446     		mov	r4, r0
 481 0006 0E46     		mov	r6, r1
 482 0008 1546     		mov	r5, r2
 483 000a 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccPxQBnR.s 			page 13


 171:Core/Src/can.c ****   if (can_wait(hcan, 1) != HAL_OK)
 484              		.loc 1 171 3 is_stmt 1 view .LVU128
 485              		.loc 1 171 7 is_stmt 0 view .LVU129
 486 000c 0121     		movs	r1, #1
 487              	.LVL34:
 488              		.loc 1 171 7 view .LVU130
 489 000e FFF7FEFF 		bl	can_wait
 490              	.LVL35:
 491              		.loc 1 171 6 view .LVU131
 492 0012 38B9     		cbnz	r0, .L30
 172:Core/Src/can.c ****     return HAL_TIMEOUT;
 173:Core/Src/can.c **** 
 174:Core/Src/can.c ****   return HAL_CAN_AddTxMessage(hcan, header, buffer, &mailbox);
 493              		.loc 1 174 3 is_stmt 1 view .LVU132
 494              		.loc 1 174 10 is_stmt 0 view .LVU133
 495 0014 01AB     		add	r3, sp, #4
 496 0016 3246     		mov	r2, r6
 497 0018 2946     		mov	r1, r5
 498 001a 2046     		mov	r0, r4
 499 001c FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 500              	.LVL36:
 501              	.L29:
 175:Core/Src/can.c **** }
 502              		.loc 1 175 1 view .LVU134
 503 0020 02B0     		add	sp, sp, #8
 504              		.cfi_remember_state
 505              		.cfi_def_cfa_offset 16
 506              		@ sp needed
 507 0022 70BD     		pop	{r4, r5, r6, pc}
 508              	.LVL37:
 509              	.L30:
 510              		.cfi_restore_state
 172:Core/Src/can.c ****     return HAL_TIMEOUT;
 511              		.loc 1 172 12 view .LVU135
 512 0024 0320     		movs	r0, #3
 513 0026 FBE7     		b	.L29
 514              		.cfi_endproc
 515              	.LFE138:
 517              		.global	hcan1
 518              		.section	.bss.hcan1,"aw",%nobits
 519              		.align	2
 520              		.set	.LANCHOR0,. + 0
 523              	hcan1:
 524 0000 00000000 		.space	40
 524      00000000 
 524      00000000 
 524      00000000 
 524      00000000 
 525              		.text
 526              	.Letext0:
 527              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 528              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 529              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 530              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 531              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 532              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 533              		.file 8 "Core/Inc/can.h"
ARM GAS  /tmp/ccPxQBnR.s 			page 14


 534              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 535              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 536              		.file 11 "Core/Inc/main.h"
ARM GAS  /tmp/ccPxQBnR.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 can.c
     /tmp/ccPxQBnR.s:18     .text.MX_CAN1_Init:0000000000000000 $t
     /tmp/ccPxQBnR.s:26     .text.MX_CAN1_Init:0000000000000000 MX_CAN1_Init
     /tmp/ccPxQBnR.s:160    .text.MX_CAN1_Init:0000000000000080 $d
     /tmp/ccPxQBnR.s:167    .text.HAL_CAN_MspInit:0000000000000000 $t
     /tmp/ccPxQBnR.s:174    .text.HAL_CAN_MspInit:0000000000000000 HAL_CAN_MspInit
     /tmp/ccPxQBnR.s:317    .text.HAL_CAN_MspInit:00000000000000a8 $d
     /tmp/ccPxQBnR.s:323    .text.HAL_CAN_MspDeInit:0000000000000000 $t
     /tmp/ccPxQBnR.s:330    .text.HAL_CAN_MspDeInit:0000000000000000 HAL_CAN_MspDeInit
     /tmp/ccPxQBnR.s:388    .text.HAL_CAN_MspDeInit:000000000000003c $d
     /tmp/ccPxQBnR.s:395    .text.can_wait:0000000000000000 $t
     /tmp/ccPxQBnR.s:402    .text.can_wait:0000000000000000 can_wait
     /tmp/ccPxQBnR.s:457    .text.can_send:0000000000000000 $t
     /tmp/ccPxQBnR.s:464    .text.can_send:0000000000000000 can_send
     /tmp/ccPxQBnR.s:523    .bss.hcan1:0000000000000000 hcan1
     /tmp/ccPxQBnR.s:519    .bss.hcan1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_CAN_Init
HAL_CAN_ConfigFilter
HAL_CAN_ActivateNotification
HAL_CAN_Start
Error_Handler
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
HAL_GetTick
HAL_CAN_GetTxMailboxesFreeLevel
HAL_CAN_AddTxMessage
